image: 'microsoft/dotnet:2.1-sdk-alpine'

variables:
  PROJECT_NAME: $CI_PROJECT_NAME
  TESTPROJECT_NAME: DotNetCoreTest

stages:
  - build
  - test
  - deploy

Build:
  artifacts:
    expire_in: 1 hour
    paths:
      - "*.nupkg"
      - $PROJECT_NAME/release/*
      - nuget
    untracked: true
  script:
    - dotnet restore --packages nuget
    - dotnet build $PROJECT_NAME
    - dotnet publish -c release -o release $PROJECT_NAME -r alpine.3.6-x64
  stage: build

Test:
  stage: test
  services:
    - mongo
  script:
    - dotnet test $TESTPROJECT_NAME

# Coverage:
#   stage: test
#   script:
#     - dotnet test /p:CoverletOutputFormat=opencover

Deploy:
  image: 'docker:latest'
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${CI_BUILD_REF:0:5} -t $CI_REGISTRY_IMAGE:latest $PROJECT_NAME/.
    - docker push $CI_REGISTRY_IMAGE:${CI_BUILD_REF:0:5}
  services:
    - 'docker:dind'
  except:
    - tags

Deploy Tag:
  image: 'docker:latest'
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -t $CI_REGISTRY_IMAGE:latest $PROJECT_NAME/.
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  services:
    - 'docker:dind'
  only:
    - tags
  